//
//  {{ module_info.name }}ViewController.swift
//  {{ developer.company }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import RxSwift

final class {{ module_info.name }}ViewController: UIViewController {
	private let disposeBag: DisposeBag
	private let output: {{ module_info.name }}ViewOutput
	private let input: {{ module_info.name }}ViewInput?

	// MARK: - Initializer

	init(output: {{ module_info.name }}ViewOutput, input: {{ module_info.name }}ViewInput) {
		disposeBag = DisposeBag()

		self.output = output
		self.input = input

		super.init(nibName: nil, bundle: nil)
	}

    required init?(coder aDecoder: NSCoder) {
        fatalError("{{ module_info.name }}ViewController must not be instanciated with interface builder")
    }

    // MARK: - View life cycle

    override func viewDidLoad() {
        super.viewDidLoad()

        bindOutput()
        bindInput()
    }

    // MARK: - Private

    private func bindOutput() {
        /*
            button
                .rx
                .tap
                .map { {{ module_info.name }}Flow.Request.buttonTap }
                .bind(to: output.handleRequest)
                .disposed(by: disposeBag)
        */
    }

    private func bindInput() {
        /* input
                .viewModel
                .map { ... }
                .drive( ... )
                .disposed(by: disposeBag)
        */
    }
}
